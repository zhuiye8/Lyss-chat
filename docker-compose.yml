services:
  # PostgreSQL Database
  db:
    image: postgres:16.3-alpine
    restart: unless-stopped
    environment:
      POSTGRES_SERVER: db
      POSTGRES_USER: lyss
      POSTGRES_PASSWORD: lyss_password_dev
      POSTGRES_DB: lyss_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lyss -d lyss_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.10.1
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334

  # Backend FastAPI Application (DISABLED - Run locally for debugging)
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.dev
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./backend:/app
  #     - backend_uploads:/app/uploads
  #   environment:
  #     # Database
  #     POSTGRES_SERVER: db
  #     POSTGRES_PORT: 5432
  #     POSTGRES_USER: lyss
  #     POSTGRES_PASSWORD: lyss_password_dev
  #     POSTGRES_DB: lyss_db
  #     
  #     # Redis
  #     REDIS_URL: redis://redis:6379
  #     
  #     # Qdrant
  #     QDRANT_URL: http://qdrant:6333
  #     
  #     # Application
  #     ENVIRONMENT: development
  #     DEBUG: true
  #     SECRET_KEY: dev_secret_key_change_in_production_32_chars
  #     AUTH_SECRET: dev_auth_secret_change_in_production_32_chars
  #     ENCRYPTION_KEY: dev_encryption_key_change_32_chars
  #     
  #     # Admin user
  #     FIRST_SUPERUSER: admin@lyss.ai
  #     FIRST_SUPERUSER_PASSWORD: admin123
  #     
  #     # File upload
  #     UPLOAD_DIR: /app/uploads
  #     MAX_FILE_SIZE_MB: 50
  #     
  #     # CORS
  #     BACKEND_CORS_ORIGINS: http://localhost:3000,http://localhost:8001
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     qdrant:
  #       condition: service_started
  #   command: >
  #     sh -c "
  #       echo 'Waiting for database to be ready...' &&
  #       python -c 'import asyncio; from app.initial_data import main; asyncio.run(main())' &&
  #       echo 'Starting FastAPI server...' &&
  #       uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
  #     "

volumes:
  postgres_data:
  redis_data:
  qdrant_data: