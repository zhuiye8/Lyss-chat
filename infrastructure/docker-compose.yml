version: '3.8'

services:
  # PostgreSQL 主数据库
  postgres:
    image: postgres:15-alpine
    container_name: lyss-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: lyss_platform
      POSTGRES_USER: lyss
      POSTGRES_PASSWORD: lyss123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lyss"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - lyss-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: lyss-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./configs/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - lyss-network

  # ClickHouse 时序数据库
  clickhouse:
    image: clickhouse/clickhouse-server:23-alpine
    container_name: lyss-clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./configs/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./configs/clickhouse/users.xml:/etc/clickhouse-server/users.xml
    environment:
      CLICKHOUSE_DB: lyss_analytics
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8123/"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - lyss-network

  # Consul 服务发现
  consul:
    image: consul:1.15
    container_name: lyss-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - consul_data:/consul/data
      - ./configs/consul/consul.hcl:/consul/config/consul.hcl
    command: >
      consul agent -server -bootstrap-expect=1 -ui -bind=0.0.0.0 
      -client=0.0.0.0 -config-file=/consul/config/consul.hcl
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - lyss-network

  # Qdrant 向量数据库
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: lyss-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./configs/qdrant/config.yaml:/qdrant/config/production.yaml
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "sh", "-c", "timeout 2 bash -c '</dev/tcp/127.0.0.1/6333'"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - lyss-network

  # Prometheus 监控 (可选)
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: lyss-prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    profiles: ["monitoring"]
    networks:
      - lyss-network

  # Grafana 可视化 (可选)
  grafana:
    image: grafana/grafana:10.2.3
    container_name: lyss-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    restart: unless-stopped
    profiles: ["monitoring"]
    networks:
      - lyss-network

  # Jaeger 分布式追踪 (可选)
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: lyss-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    restart: unless-stopped
    profiles: ["monitoring"]
    networks:
      - lyss-network

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:
  consul_data:
  qdrant_data:
  prometheus_data:
  grafana_data:

networks:
  lyss-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16